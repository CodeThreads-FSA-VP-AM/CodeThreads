"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const Performance_1 = __importDefault(require("./Performance"));
const Profile_1 = __importDefault(require("./Profile"));
const Products_1 = __importDefault(require("./Products"));
const Users_1 = __importDefault(require("./Users"));
const AllOrders_1 = __importDefault(require("./AllOrders"));
const api_1 = require("../api/api");
const AdminNav = ({ setProductId, user, setSuccess, setSuccessMsg, setSuccessTitle, products, setProducts, }) => {
    const [activeComponent, setActiveComponent] = (0, react_1.useState)("home");
    const [allOrders, setAllOrders] = (0, react_1.useState)([]);
    (0, react_1.useEffect)(() => {
        const getAllOrders = () => __awaiter(void 0, void 0, void 0, function* () {
            const orders = yield (0, api_1.fetchOrders)();
            setAllOrders(orders);
        });
        getAllOrders();
    }, []);
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex flex-no-wrap" }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: "absolute flex-col justify-between hidden w-64 bg-white shadow sm:relative md:h-full sm:flex" }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "h-screen px-8" }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: "flex items-center w-full h-16" }, { children: (0, jsx_runtime_1.jsx)("h1", { children: "Admin Dashboard" }) })), (0, jsx_runtime_1.jsxs)("ul", Object.assign({ className: "mt-12" }, { children: [(0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full mb-6 text-gray-600 cursor-pointer hover:text-gray-500", onClick: () => setActiveComponent("home") }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-grid", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("rect", { x: 4, y: 4, width: 6, height: 6, rx: 1 }), (0, jsx_runtime_1.jsx)("rect", { x: 14, y: 4, width: 6, height: 6, rx: 1 }), (0, jsx_runtime_1.jsx)("rect", { x: 4, y: 14, width: 6, height: 6, rx: 1 }), (0, jsx_runtime_1.jsx)("rect", { x: 14, y: 14, width: 6, height: 6, rx: 1 })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Users" }))] })) })), (0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full mb-6 text-gray-600 cursor-pointer hover:text-gray-500", onClick: () => setActiveComponent("products") }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-puzzle", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("path", { d: "M4 7h3a1 1 0 0 0 1 -1v-1a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0 -1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 0 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 0 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1" })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Products" }))] })) })), (0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full mb-6 text-gray-600 cursor-pointer hover:text-gray-500", onClick: () => setActiveComponent("orders") }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-puzzle", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("path", { d: "M4 7h3a1 1 0 0 0 1 -1v-1a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0 -1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 0 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 0 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1" })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Orders" }))] })) })), (0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full mb-6 text-gray-600 cursor-pointer hover:text-gray-500", onClick: () => setActiveComponent("performance") }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-stack", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("polyline", { points: "12 4 4 8 12 12 20 8 12 4" }), (0, jsx_runtime_1.jsx)("polyline", { points: "4 12 12 16 20 12" }), (0, jsx_runtime_1.jsx)("polyline", { points: "4 16 12 20 20 16" })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Stats" }))] })) })), (0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full text-gray-600 cursor-pointer hover:text-gray-500", onClick: () => setActiveComponent("profile") }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-settings", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("path", { d: "M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" }), (0, jsx_runtime_1.jsx)("circle", { cx: 12, cy: 12, r: 3 })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Settings" }))] })) }))] })), (0, jsx_runtime_1.jsx)("div", Object.assign({ className: "flex justify-center mt-[250px] mb-4 w-full" }, { children: (0, jsx_runtime_1.jsx)("div", { className: "relative " }) }))] })) })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "absolute z-40 flex-col justify-between w-64 transition duration-150 ease-in-out bg-white shadow md:h-full sm:hidden", id: "mobile-nav" }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: "absolute right-0 flex items-center justify-center w-10 h-10 mt-16 -mr-10 bg-gray-600 rounded-tr rounded-br shadow cursor-pointer", id: "mobile-toggler" }, { children: (0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-adjustments", width: 20, height: 20, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "#FFFFFF", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("circle", { cx: 6, cy: 10, r: 2 }), (0, jsx_runtime_1.jsx)("line", { x1: 6, y1: 4, x2: 6, y2: 8 }), (0, jsx_runtime_1.jsx)("line", { x1: 6, y1: 12, x2: 6, y2: 20 }), (0, jsx_runtime_1.jsx)("circle", { cx: 12, cy: 16, r: 2 }), (0, jsx_runtime_1.jsx)("line", { x1: 12, y1: 4, x2: 12, y2: 14 }), (0, jsx_runtime_1.jsx)("line", { x1: 12, y1: 18, x2: 12, y2: 20 }), (0, jsx_runtime_1.jsx)("circle", { cx: 18, cy: 7, r: 2 }), (0, jsx_runtime_1.jsx)("line", { x1: 18, y1: 4, x2: 18, y2: 5 }), (0, jsx_runtime_1.jsx)("line", { x1: 18, y1: 9, x2: 18, y2: 20 })] })) })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "h-screen px-8" }, { children: [(0, jsx_runtime_1.jsx)("div", Object.assign({ className: "flex items-center w-full h-16" }, { children: (0, jsx_runtime_1.jsx)("h1", { children: "Admin Dashboard" }) })), (0, jsx_runtime_1.jsxs)("ul", Object.assign({ className: "mt-12" }, { children: [(0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full mb-6 text-gray-800 cursor-pointer hover:text-gray-500" }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-grid", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("rect", { x: 4, y: 4, width: 6, height: 6, rx: 1 }), (0, jsx_runtime_1.jsx)("rect", { x: 14, y: 4, width: 6, height: 6, rx: 1 }), (0, jsx_runtime_1.jsx)("rect", { x: 4, y: 14, width: 6, height: 6, rx: 1 }), (0, jsx_runtime_1.jsx)("rect", { x: 14, y: 14, width: 6, height: 6, rx: 1 })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Dashboard" }))] })) })), (0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full mb-6 text-gray-600 cursor-pointer hover:text-gray-500" }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-puzzle", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("path", { d: "M4 7h3a1 1 0 0 0 1 -1v-1a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0 -1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 0 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 0 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1" })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Products" }))] })) })), (0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full mb-6 text-gray-600 cursor-pointer hover:text-gray-500" }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-puzzle", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("path", { d: "M4 7h3a1 1 0 0 0 1 -1v-1a2 2 0 0 1 4 0v1a1 1 0 0 0 1 1h3a1 1 0 0 1 1 1v3a1 1 0 0 0 1 1h1a2 2 0 0 1 0 4h-1a1 1 0 0 0 -1 1v3a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-1a2 2 0 0 0 -4 0v1a1 1 0 0 1 -1 1h-3a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1h1a2 2 0 0 0 0 -4h-1a1 1 0 0 1 -1 -1v-3a1 1 0 0 1 1 -1" })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Orders" }))] })) })), (0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full mb-6 text-gray-600 cursor-pointer hover:text-gray-500" }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-stack", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("polyline", { points: "12 4 4 8 12 12 20 8 12 4" }), (0, jsx_runtime_1.jsx)("polyline", { points: "4 12 12 16 20 12" }), (0, jsx_runtime_1.jsx)("polyline", { points: "4 16 12 20 20 16" })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Stats" }))] })) })), (0, jsx_runtime_1.jsx)("li", Object.assign({ className: "flex items-center justify-between w-full text-gray-600 cursor-pointer hover:text-gray-500" }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "flex items-center" }, { children: [(0, jsx_runtime_1.jsxs)("svg", Object.assign({ xmlns: "http://www.w3.org/2000/svg", className: "icon icon-tabler icon-tabler-settings", width: 18, height: 18, viewBox: "0 0 24 24", strokeWidth: "1.5", stroke: "currentColor", fill: "none", strokeLinecap: "round", strokeLinejoin: "round" }, { children: [(0, jsx_runtime_1.jsx)("path", { stroke: "none", d: "M0 0h24v24H0z" }), (0, jsx_runtime_1.jsx)("path", { d: "M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" }), (0, jsx_runtime_1.jsx)("circle", { cx: 12, cy: 12, r: 3 })] })), (0, jsx_runtime_1.jsx)("span", Object.assign({ className: "ml-2 text-sm" }, { children: "Settings" }))] })) }))] }))] }))] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "container w-11/12 h-64 px-6 py-10 mx-auto md:w-4/5" }, { children: [activeComponent === "home" ? (0, jsx_runtime_1.jsx)(Users_1.default, {}) : null, activeComponent === "products" ? ((0, jsx_runtime_1.jsx)(Products_1.default, { setProductId: setProductId, user: user, setSuccess: setSuccess, setSuccessTitle: setSuccessTitle, setSuccessMsg: setSuccessMsg, products: products, setProducts: setProducts })) : null, activeComponent === "orders" ? ((0, jsx_runtime_1.jsx)(AllOrders_1.default, { allOrders: allOrders, setAllOrders: setAllOrders })) : null, activeComponent === "performance" ? (0, jsx_runtime_1.jsx)(Performance_1.default, {}) : null, activeComponent === "profile" ? (0, jsx_runtime_1.jsx)(Profile_1.default, {}) : null] }))] })));
};
exports.default = AdminNav;
